Implementing Queue Using Array :
QUEUE :
A Queue is defined as a linear data structure that is open at both ends and the operations are performed in First In First Out (FIFO) order.

QUEUE OPERATIONS :
Enqueue: 
Addition of an element to the queue. Adding an element will be performed after checking whether the queue is full or not. 
If rear < n which indicates that the array is not full then store the element at arr[rear] and increment rear by 1 but if rear == n then it is said to be an Overflow condition as the array is full.

Dequeue: 
Removal of an element from the queue. An element can only be deleted when there is at least an element to delete i.e. rear > 0. Now, the element at arr[front] can be deleted but all the remaining elements have to shift to the left by one position in order for the dequeue operation to delete the second element from the left on another dequeue operation.

Display: 
Print all elements of the queue. If the queue is non-empty, traverse and print all the elements from the index front to rear.

TIME COMPLEXITY:

Enqueue: O(1) 
Dequeue: O(1) 
Display: O(N)

TEST CASE :
Enter Queue size
4
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
1
Enter data
100
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
1
Enter data
200
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
1
Enter data
300
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
1
Enter data
400
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
1
Queue Overflow
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
3
The elements in the Queue are  =  100  200  300  400
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
2
The deleted element is 100
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
3
The elements in the Queue are  =  200  300  400
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
1
Queue Overflow
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
2
The deleted element is 200
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
3
The elements in the Queue are  =  300  400
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
2
The deleted element is 300
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
3
The elements in the Queue are  =  400
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
2
The deleted element is 400
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
3
Queue is Empty
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
1
Enter data
1000
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
1
Enter data
2000
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
3
The elements in the Queue are  =  1000  2000
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
2
The deleted element is 1000
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
3
The elements in the Queue are  =  2000
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
2
The deleted element is 2000
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
2
Queue Underflow
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
3
Queue is Empty
1.Enqueue
2.Dequeue
3.Display
4.Exit
Enter your choice
4
Exit from the Flow
