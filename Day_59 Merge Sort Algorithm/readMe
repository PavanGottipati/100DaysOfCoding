PROBLEM :
Apply merge sort algorithm to sort the elements in an array

MERGE SORT :
Merge Sort is a Divide and Conquer algorithm. It divides input array in two halves, calls itself for the two halves and then merges the two sorted halves.
The merge() function is used for merging two halves. 
The merge(arr, l, m, r) is key process that assumes that arr[l..m] and arr[m+1..r] are sorted and merges the two sorted sub-arrays into one.

PSEUDOCODE FOR MERGE SORT ALGORITHM :
MergeSort(arr, left, right):
    if left > right 
        return
    mid = (left+right)/2
    mergeSort(arr, left, mid)
    mergeSort(arr, mid+1, right)
    merge(arr, left, mid, right)
end

TIME COMPLEXITY OF MERGE SORT ALGORITHM :
BEST CASE : O(n logn)
AVERAGE CASE : O(n logn)
WORST CASE : O(n logn)

WORST SPACE COMPLEXITY : O(n)

STABILITY OF MERGE SORT : Yes

TEST CASE 1 :
INPUT :
Enter array size
5
Enter elements into array
8  6  5  3  2
OUTPUT :
Given Array
8 6 5 3 2

Sorted array
2 3 5 6 8


TEST CASE 2 :
INPUT :
Enter array size
3
Enter elements into array
2  3  4
OUTPUT :
Given Array
2 3 4

Sorted array
2 3 4


TEST CASE 3 :
Enter array size
0
Then No Output


TEST CASE 4 :
INPUT :
Enter array size
5
Enter elements into array
19  16  13  9  6
OUTPUT :
Given Array
19  16  13  9  6

Sorted array
6  9  13  16  19
