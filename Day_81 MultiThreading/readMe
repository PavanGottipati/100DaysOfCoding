MULTITHREADING IN JAVA
In Java, Multithreading refers to a process of executing two or more threads simultaneously for maximum utilization of the CPU. 
A thread in Java is a lightweight process requiring fewer resources to create and share the process resources.

Multithreading and Multiprocessing are used for multitasking in Java, but we prefer multithreading over multiprocessing. 
This is because the threads use a shared memory area which helps to save memory, and also, the content-switching between the threads is a bit faster than the process.

Life Cycle of a Thread
There are five states a thread has to go through in its life cycle. This life cycle is controlled by JVM (Java Virtual Machine). These states are:

New
Runnable
Running
Non-Runnable (Blocked)
Terminated
1. New

In this state, a new thread begins its life cycle. This is also called a born thread. The thread is in the new state if you create an instance of Thread class but before the invocation of the start() method.

2. Runnable

A thread becomes runnable after a newly born thread is started. In this state, a thread would be executing its task.

3. Running

When the thread scheduler selects the thread then, that thread would be in a running state.

4. Non-Runnable (Blocked)

The thread is still alive in this state, but currently, it is not eligible to run.

5. Terminated

A thread is terminated due to the following reasons:

Either its run() method exists normally, i.e., the threadâ€™s code has executed the program.
Or due to some unusual errors like segmentation fault or an unhandled exception.
A thread that is in a terminated state does not consume cycle of the CPU.

TEST CASE :
Three Threads are Created to print first 10 Even Numbers, first 10 Odd Numbers and Square Of First 10 Natural Numbers
First Thread is Even
Second Thread is Odd
Third Thread is Square
Odd 1
Odd 3
Even 0
Even 2
Even 4
Even 6
Even 8
Odd 5
Odd 7
Odd 9
square 1 1
square 2 4
square 3 9
square 4 16
square 5 25
square 6 36
square 7 49
square 8 64
square 9 81
Odd 11
Odd 13
Odd 15
Odd 17
Odd 19
Odd 21
Even 10
Even 12
Even 14
Even 16
square 10 100
Even 18
Even 20
